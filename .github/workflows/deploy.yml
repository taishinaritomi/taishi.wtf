name: deploy
on:
  push:
    branches:
      - main
  workflow_dispatch:
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v3
      - uses: google-github-actions/auth@v1
        id: gcp-auth
        with:
          token_format: "access_token"
          workload_identity_provider: "${{ vars.GCP_WIF_PROVIDER }}"
          service_account: "${{ vars.GCP_WIF_SERVICE_ACCOUNT }}"
      - uses: "docker/setup-buildx-action@v3"
      - uses: "docker/login-action@v1"
        id: docker-auth
        with:
          username: "oauth2accesstoken"
          password: "${{ steps.gcp-auth.outputs.access_token }}"
          registry: "${{ vars.GCP_ARTIFACT_REGISTRY }}"
      - uses: docker/build-push-action@v3
        id: docker-image
        with:
          push: true
          file: ".docker/api/.Dockerfile"
          tags: ${{ vars.API_IMAGE_ID_BASE }}:${{ github.sha }}
      - uses: hashicorp/setup-terraform@v3
      - run: |
          cd tf_deploy
          terraform init
          terraform plan -var-file variables.tfvars
          terraform apply -var-file variables.tfvars -auto-approve
        env:
          TF_VAR_gcp_cloud_run_api_image_id: "${{ vars.API_IMAGE_ID_BASE }}@${{ steps.docker-image.outputs.imageid }}"
          TF_VAR_gcp_cloud_run_service_account: "${{ vars.GCP_WIF_SERVICE_ACCOUNT }}"
          TF_VAR_cf_api_token: "${{ secrets.CF_API_TOKEN }}"
